import React, { useState } from 'react'
import {
  Box,
  Typography,
  Paper,
  Grid,
  Chip,
  Button,
  Divider,
  Avatar,
  Card,
  CardContent,
  List,
  ListItem,
  ListItemText,
  ListItemIcon,
  IconButton,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  TextField
} from '@mui/material'
import { 
  ArrowBack, 
  Edit, 
  Delete, 
  Share, 
  Print, 
  Visibility, 
  Comment,
  ThumbUp,
  Bookmark,
  Schedule
} from '@mui/icons-material'
import { useNavigate } from 'react-router-dom'

const noticeDetail = {
  id: 1,
  title: 'AI ÌöåÏùòÎ°ù ÏãúÏä§ÌÖú ÏóÖÎç∞Ïù¥Ìä∏ ÏïàÎÇ¥ (v2.1)',
  content: `# AI ÌöåÏùòÎ°ù ÏãúÏä§ÌÖú ÏóÖÎç∞Ïù¥Ìä∏ ÏïàÎÇ¥

ÏïàÎÖïÌïòÏÑ∏Ïöî, SK Í≥ÑÏó¥ÏÇ¨ AI ÌöåÏùòÎ°ù ÏãúÏä§ÌÖú Í¥ÄÎ¶¨ÌåÄÏûÖÎãàÎã§.

## üìã ÏóÖÎç∞Ïù¥Ìä∏ Í∞úÏöî
2024ÎÖÑ 1Ïõî 20Ïùº(ÌÜ†) Ïò§Ï†Ñ 2:00 - 6:00 ÎèôÏïà ÏãúÏä§ÌÖú ÏóÖÎç∞Ïù¥Ìä∏Î•º ÏßÑÌñâÌï©ÎãàÎã§.

## ‚ú® Ï£ºÏöî Í∞úÏÑ†ÏÇ¨Ìï≠

### 1. AI ÏùåÏÑ± Ïù∏Ïãù Ï†ïÌôïÎèÑ Ìñ•ÏÉÅ
- ÌïúÍµ≠Ïñ¥ ÏùåÏÑ± Ïù∏Ïãù Ï†ïÌôïÎèÑ 95% ‚Üí 98%Î°ú Í∞úÏÑ†
- Îã§ÌôîÏûê Íµ¨Î∂Ñ Í∏∞Îä• Í∞ïÌôî
- Î∞∞Í≤Ω Ïû°Ïùå Ï†úÍ±∞ ÏïåÍ≥†Î¶¨Ï¶ò ÏóÖÎç∞Ïù¥Ìä∏

### 2. Ïã§ÏãúÍ∞Ñ Î≤àÏó≠ Í∏∞Îä• Ï∂îÍ∞Ä
- ÏòÅÏñ¥ ‚Üî ÌïúÍµ≠Ïñ¥ Ïã§ÏãúÍ∞Ñ Î≤àÏó≠ ÏßÄÏõê
- Ï§ëÍµ≠Ïñ¥, ÏùºÎ≥∏Ïñ¥ Î≤àÏó≠ Í∏∞Îä• Î≤†ÌÉÄ Î≤ÑÏ†Ñ Ï∂úÏãú

### 3. ÌöåÏùò ÌÖúÌîåÎ¶ø ÌôïÏû•
- 20Í∞ú Ïã†Í∑ú ÌÖúÌîåÎ¶ø Ï∂îÍ∞Ä
- ÏóÖÏ¢ÖÎ≥Ñ ÎßûÏ∂§ ÌÖúÌîåÎ¶ø Ï†úÍ≥µ
- ÏÇ¨Ïö©Ïûê Ï†ïÏùò ÌÖúÌîåÎ¶ø ÏÉùÏÑ± ÎèÑÍµ¨ Í∞úÏÑ†

### 4. Î≥¥Ïïà Í∞ïÌôî
- Ï¢ÖÎã®Í∞Ñ ÏïîÌò∏Ìôî(E2E) Ï†ÅÏö©
- Îã§Îã®Í≥Ñ Ïù∏Ï¶ù(MFA) ÏòµÏÖò Ï∂îÍ∞Ä
- Í∞êÏÇ¨ Î°úÍ∑∏ Í∏∞Îä• Í∞ïÌôî

## üöÄ Ïã†Í∑ú Í∏∞Îä•

### Ï∫òÎ¶∞Îçî Ïó∞Îèô
- Google Ï∫òÎ¶∞Îçî, Outlook Ïó∞Îèô ÏßÄÏõê
- ÌöåÏùò ÏùºÏ†ï ÏûêÎèô ÎèôÍ∏∞Ìôî
- Ï∞∏ÏÑùÏûê ÏûêÎèô Ï¥àÎåÄ Í∏∞Îä•

### Î™®Î∞îÏùº Ïï± Ï∂úÏãú
- iOS/Android ÎÑ§Ïù¥Ìã∞Î∏å Ïï± Ï∂úÏãú
- Ïò§ÌîÑÎùºÏù∏ ÎÖπÏùå Î∞è ÎèôÍ∏∞Ìôî ÏßÄÏõê
- Ìë∏Ïãú ÏïåÎ¶º Í∏∞Îä•

## ‚ö†Ô∏è Ï£ºÏùòÏÇ¨Ìï≠

1. **ÏóÖÎç∞Ïù¥Ìä∏ Í∏∞Í∞Ñ Ï§ë ÏÑúÎπÑÏä§ Ï§ëÎã®**
   - 2024.01.20 (ÌÜ†) 02:00 - 06:00
   - ÏïΩ 4ÏãúÍ∞Ñ ÎèôÏïà Ï†ëÏÜç Î∂àÍ∞Ä

2. **Î∏åÎùºÏö∞Ï†Ä Ï∫êÏãú ÏÇ≠Ï†ú ÌïÑÏöî**
   - ÏóÖÎç∞Ïù¥Ìä∏ ÌõÑ Ctrl+F5Î°ú ÏÉàÎ°úÍ≥†Ïπ®
   - Î™®Î∞îÏùºÏùÄ Ïï± Ïû¨ÏãúÏûë Í∂åÏû•

3. **Îç∞Ïù¥ÌÑ∞ Î∞±ÏóÖ**
   - Ï§ëÏöîÌïú ÌöåÏùòÎ°ùÏùÄ ÎØ∏Î¶¨ Îã§Ïö¥Î°úÎìú Í∂åÏû•
   - ÏãúÏä§ÌÖú Î≥µÍµ¨ Ïãú ÏµúÎåÄ 24ÏãúÍ∞Ñ Ïù¥Ï†Ñ Îç∞Ïù¥ÌÑ∞Î°ú Î≥µÏõê

## üìû Î¨∏ÏùòÏÇ¨Ìï≠

Í∏∞Ïà† ÏßÄÏõêÌåÄ: support@aiminute.co.kr
Ï†ÑÌôî: 02-1234-5678 (ÌèâÏùº 09:00-18:00)

ÏóÖÎç∞Ïù¥Ìä∏Ïóê ÎåÄÌïú ÏûêÏÑ∏Ìïú ÎÇ¥Ïö©ÏùÄ Ï≤®Î∂ÄÎêú Î¶¥Î¶¨Ïä§ ÎÖ∏Ìä∏Î•º Ï∞∏Í≥†Ìï¥ Ï£ºÏÑ∏Ïöî.

Í∞êÏÇ¨Ìï©ÎãàÎã§.

**AI ÌöåÏùòÎ°ù ÏãúÏä§ÌÖú Í¥ÄÎ¶¨ÌåÄ**`,
  category: 'ÏãúÏä§ÌÖú',
  importance: 'ÎÜíÏùå',
  status: 'Í≤åÏãúÏ§ë',
  publishDate: '2024-01-15',
  publishTime: '14:30',
  viewCount: 1247,
  likeCount: 89,
  commentCount: 23,
  author: 'ÍπÄÍ≥µÏßÄ',
  authorEmail: 'kim.notice@sktelecom.com',
  authorRole: 'ÏãúÏä§ÌÖúÍ¥ÄÎ¶¨Ïûê',
  lastModified: '2024-01-15 16:45',
  tags: ['ÏóÖÎç∞Ïù¥Ìä∏', 'ÏãúÏä§ÌÖú', 'Ï§ëÏöî', 'AI'],
  attachments: [
    {
      name: 'release_notes_v2.1.pdf',
      size: '2.3MB',
      downloadCount: 156
    },
    {
      name: 'update_guide.pdf',
      size: '1.8MB',
      downloadCount: 89
    }
  ]
}

const comments = [
  {
    id: 1,
    userName: 'Ïù¥ÏÇ¨Ïö©Ïûê',
    userRole: 'ÏÇ¨Ïö©Ïûê',
    content: 'ÏóÖÎç∞Ïù¥Ìä∏ Ï†ïÎ≥¥ Í∞êÏÇ¨Ìï©ÎãàÎã§. ÏùåÏÑ± Ïù∏Ïãù Ï†ïÌôïÎèÑ Ìñ•ÏÉÅÏù¥ Í∏∞ÎåÄÎêòÎÑ§Ïöî!',
    timestamp: '2024-01-15 15:20',
    likes: 12,
    replies: []
  },
  {
    id: 2,
    userName: 'Î∞ïÍ¥ÄÎ¶¨Ïûê',
    userRole: 'Í¥ÄÎ¶¨Ïûê',
    content: 'Î™®Î∞îÏùº Ïï± Ï∂úÏãú ÏùºÏ†ïÎèÑ Ìï®Íªò Í≥µÏßÄÌï¥Ï£ºÏã§ Ïàò ÏûàÎÇòÏöî?',
    timestamp: '2024-01-15 15:45',
    likes: 8,
    replies: [
      {
        id: 21,
        userName: 'ÍπÄÍ≥µÏßÄ',
        userRole: 'ÏãúÏä§ÌÖúÍ¥ÄÎ¶¨Ïûê',
        content: 'Î™®Î∞îÏùº Ïï±ÏùÄ 2024ÎÖÑ 2Ïõî Ï≤´Ïß∏ Ï£ºÏóê Ï∂úÏãú ÏòàÏ†ïÏûÖÎãàÎã§. Î≥ÑÎèÑ Í≥µÏßÄ ÏòàÏ†ïÏûÖÎãàÎã§.',
        timestamp: '2024-01-15 16:10',
        likes: 15
      }
    ]
  },
  {
    id: 3,
    userName: 'ÏµúÏßàÎ¨∏',
    userRole: 'ÏÇ¨Ïö©Ïûê',
    content: 'ÏóÖÎç∞Ïù¥Ìä∏ Ï§ëÏóêÎèÑ Í∏¥Í∏âÌïòÍ≤å ÌöåÏùòÎ°ùÏù¥ ÌïÑÏöîÌïú Í≤ΩÏö∞Îäî Ïñ¥ÎñªÍ≤å Ìï¥Ïïº ÌïòÎÇòÏöî?',
    timestamp: '2024-01-15 16:30',
    likes: 5,
    replies: []
  }
]

function NoticeDetailPage() {
  const navigate = useNavigate()
  const [editDialogOpen, setEditDialogOpen] = useState(false)
  const [newComment, setNewComment] = useState('')
  const [liked, setLiked] = useState(false)
  const [bookmarked, setBookmarked] = useState(false)

  const handleBack = () => {
    navigate('/notice')
  }

  const handleLike = () => {
    setLiked(!liked)
  }

  const handleBookmark = () => {
    setBookmarked(!bookmarked)
  }

  const handleAddComment = () => {
    if (newComment.trim()) {
      // ÎåìÍ∏Ä Ï∂îÍ∞Ä Î°úÏßÅ
      setNewComment('')
    }
  }

  return (
    <Box>
      {/* Ìó§Îçî */}
      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>
        <IconButton onClick={handleBack} sx={{ mr: 2 }}>
          <ArrowBack />
        </IconButton>
        <Typography variant="h5" component="h1" sx={{ flexGrow: 1 }}>
          Í≥µÏßÄÏÇ¨Ìï≠ ÏÉÅÏÑ∏
        </Typography>
        <Box sx={{ display: 'flex', gap: 1 }}>
          <IconButton size="small" onClick={handleLike} color={liked ? 'primary' : 'default'}>
            <ThumbUp />
          </IconButton>
          <IconButton size="small" onClick={handleBookmark} color={bookmarked ? 'warning' : 'default'}>
            <Bookmark />
          </IconButton>
          <IconButton size="small">
            <Share />
          </IconButton>
          <IconButton size="small">
            <Print />
          </IconButton>
          <Button
            variant="outlined"
            startIcon={<Edit />}
            onClick={() => setEditDialogOpen(true)}
            size="small"
          >
            ÏàòÏ†ï
          </Button>
          <Button
            variant="outlined"
            startIcon={<Delete />}
            color="error"
            size="small"
          >
            ÏÇ≠Ï†ú
          </Button>
        </Box>
      </Box>

      <Grid container spacing={3}>
        {/* ÏôºÏ™Ω: Í≥µÏßÄÏÇ¨Ìï≠ ÎÇ¥Ïö© */}
        <Grid item xs={12} md={8}>
          {/* Í≥µÏßÄÏÇ¨Ìï≠ Ìó§Îçî */}
          <Paper sx={{ p: 3, mb: 3 }}>
            <Box sx={{ mb: 2 }}>
              <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>
                <Chip 
                  label={noticeDetail.category}
                  size="small"
                  sx={{ color: '#0066FF' }}
                />
                <Chip 
                  label={noticeDetail.importance}
                  size="small"
                  color={noticeDetail.importance === 'ÎÜíÏùå' ? 'error' : 'default'}
                />
                <Chip 
                  label={noticeDetail.status}
                  size="small"
                  color="success"
                />
                {noticeDetail.tags.map((tag) => (
                  <Chip 
                    key={tag}
                    label={`#${tag}`}
                    size="small"
                    variant="outlined"
                  />
                ))}
              </Box>
              
              <Typography variant="h4" sx={{ fontWeight: 600, mb: 2 }}>
                {noticeDetail.title}
              </Typography>
              
              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
                <Avatar color="primary"
              sx={{width: 40, height: 40}}>
                  {noticeDetail.author[0]}
                </Avatar>
                <Box>
                  <Typography sx={{ fontWeight: 500 }}>
                    {noticeDetail.author}
                  </Typography>
                  <Typography variant="body2" color="text.secondary">
                    {noticeDetail.authorRole}
                  </Typography>
                </Box>
                <Divider orientation="vertical" flexItem />
                <Box>
                  <Typography variant="body2" color="text.secondary">
                    Î∞úÌñâÏùº: {noticeDetail.publishDate} {noticeDetail.publishTime}
                  </Typography>
                  <Typography variant="body2" color="text.secondary">
                    ÏµúÏ¢Ö ÏàòÏ†ï: {noticeDetail.lastModified}
                  </Typography>
                </Box>
              </Box>

              <Box sx={{ display: 'flex', gap: 3 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                  <Visibility sx={{ fontSize: 16, color: '#6B7280' }} />
                  <Typography variant="body2" color="text.secondary">
                    {noticeDetail.viewCount.toLocaleString()}
                  </Typography>
                </Box>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                  <ThumbUp sx={{ fontSize: 16, color: '#6B7280' }} />
                  <Typography variant="body2" color="text.secondary">
                    {noticeDetail.likeCount}
                  </Typography>
                </Box>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                  <Comment sx={{ fontSize: 16, color: '#6B7280' }} />
                  <Typography variant="body2" color="text.secondary">
                    {noticeDetail.commentCount}
                  </Typography>
                </Box>
              </Box>
            </Box>
          </Paper>

          {/* Í≥µÏßÄÏÇ¨Ìï≠ ÎÇ¥Ïö© */}
          <Paper sx={{ p: 3, mb: 3 }}>
            <Typography component="div" sx={{ 
              fontSize: '16px', 
              lineHeight: 1.8,
              whiteSpace: 'pre-wrap',
              '& h1': { fontSize: '24px', fontWeight: 600, mb: 2, mt: 3 },
              '& h2': { fontSize: '20px', fontWeight: 600, mb: 1.5, mt: 2 },
              '& h3': { fontSize: '18px', fontWeight: 600, mb: 1, mt: 2 },
              '& strong': { fontWeight: 600 },
              '& ul': { pl: 2 },
              '& li': { mb: 0.5 }
            }}>
              {noticeDetail.content}
            </Typography>
          </Paper>

          {/* Ï≤®Î∂ÄÌååÏùº */}
          {noticeDetail.attachments.length > 0 && (
            <Paper sx={{ p: 3, mb: 3 }}>
              <Typography variant="h6" sx={{ mb: 2 }}>Ï≤®Î∂ÄÌååÏùº</Typography>
              <List>
                {noticeDetail.attachments.map((file, index) => (
                  <ListItem key={index} sx={{ px: 0 }}>
                    <ListItemIcon>
                      <Box sx={{ 
                        width: 32, 
                        height: 32,
                        borderRadius: 1,
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center'
                      }}>
                        <Typography sx={{ fontSize: '10px', fontWeight: 600, color: '#0066FF' }}>
                          PDF
                        </Typography>
                      </Box>
                    </ListItemIcon>
                    <ListItemText
                      primary={file.name}
                      secondary={`${file.size} ‚Ä¢ Îã§Ïö¥Î°úÎìú ${file.downloadCount}Ìöå`}
                    />
                    <Button variant="outlined" size="small">
                      Îã§Ïö¥Î°úÎìú
                    </Button>
                  </ListItem>
                ))}
              </List>
            </Paper>
          )}

          {/* ÎåìÍ∏Ä ÏÑπÏÖò */}
          <Paper sx={{ p: 3 }}>
            <Typography variant="h6" sx={{ mb: 2 }}>
              ÎåìÍ∏Ä ({comments.length})
            </Typography>

            {/* ÎåìÍ∏Ä ÏûëÏÑ± */}
            <Box sx={{ mb: 3, p: 2, borderRadius: 1 }}>
              <TextField
                fullWidth
                multiline
                rows={3}
                placeholder="ÎåìÍ∏ÄÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî..."
                value={newComment}
                onChange={(e) => setNewComment(e.target.value)}
                sx={{ mb: 2 }}
              />
              <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>
                <Button 
                  variant="text"
                  onClick={handleAddComment}
                  disabled={!newComment.trim()}
                >
                  ÎåìÍ∏Ä ÏûëÏÑ±
                </Button>
              </Box>
            </Box>

            {/* ÎåìÍ∏Ä Î™©Î°ù */}
            <List>
              {comments.map((comment) => (
                <React.Fragment key={comment.id}>
                  <ListItem sx={{ px: 0, alignItems: 'flex-start' }}>
                    <Avatar sx={{ mr: 2, mt: 0.5, width: 32, height: 32 }}>
                      {comment.userName[0]}
                    </Avatar>
                    <Box sx={{ flexGrow: 1 }}>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 0.5 }}>
                        <Typography sx={{ fontWeight: 500, fontSize: '14px' }}>
                          {comment.userName}
                        </Typography>
                        <Chip 
                          label={comment.userRole}
                          size="small"
                          sx={{ height: 16, fontSize: '10px' }}
                        />
                        <Typography variant="body2" color="text.secondary">
                          {comment.timestamp}
                        </Typography>
                      </Box>
                      <Typography sx={{ mb: 1, fontSize: '14px' }}>
                        {comment.content}
                      </Typography>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                        <IconButton size="small">
                          <ThumbUp sx={{ fontSize: 14 }} />
                        </IconButton>
                        <Typography variant="body2" color="text.secondary">
                          {comment.likes}
                        </Typography>
                        <Button size="small" sx={{ fontSize: '12px' }}>
                          ÎãµÍ∏Ä
                        </Button>
                      </Box>
                      
                      {/* ÎãµÍ∏Ä */}
                      {comment.replies.map((reply) => (
                        <Box key={reply.id} sx={{ ml: 4, mt: 2, p: 2, borderRadius: 1 }}>
                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 0.5 }}>
                            <Avatar sx={{ width: 24, height: 24 }}>
                              {reply.userName[0]}
                            </Avatar>
                            <Typography sx={{ fontWeight: 500, fontSize: '13px' }}>
                              {reply.userName}
                            </Typography>
                            <Chip 
                              label={reply.userRole}
                              size="small"
                              sx={{ height: 14, fontSize: '9px' }}
                            />
                            <Typography variant="body2" color="text.secondary" sx={{ fontSize: '12px' }}>
                              {reply.timestamp}
                            </Typography>
                          </Box>
                          <Typography sx={{ fontSize: '13px', mb: 1 }}>
                            {reply.content}
                          </Typography>
                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                            <IconButton size="small">
                              <ThumbUp sx={{ fontSize: 12 }} />
                            </IconButton>
                            <Typography variant="body2" color="text.secondary" sx={{ fontSize: '11px' }}>
                              {reply.likes}
                            </Typography>
                          </Box>
                        </Box>
                      ))}
                    </Box>
                  </ListItem>
                  <Divider sx={{ my: 2 }} />
                </React.Fragment>
              ))}
            </List>
          </Paper>
        </Grid>

        {/* Ïò§Î•∏Ï™Ω: Í¥ÄÎ†® Ï†ïÎ≥¥ */}
        <Grid item xs={12} md={4}>
          {/* ÏûëÏÑ±Ïûê Ï†ïÎ≥¥ */}
          <Card sx={{ mb: 3 }}>
            <CardContent>
              <Typography variant="h6" sx={{ mb: 2 }}>ÏûëÏÑ±Ïûê Ï†ïÎ≥¥</Typography>
              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                <Avatar color="primary"
              sx={{width: 48, height: 48}}>
                  {noticeDetail.author[0]}
                </Avatar>
                <Box>
                  <Typography sx={{ fontWeight: 500 }}>
                    {noticeDetail.author}
                  </Typography>
                  <Typography variant="body2" color="text.secondary">
                    {noticeDetail.authorRole}
                  </Typography>
                  <Typography variant="body2" color="text.secondary">
                    {noticeDetail.authorEmail}
                  </Typography>
                </Box>
              </Box>
            </CardContent>
          </Card>

          {/* Í¥ÄÎ†® Í≥µÏßÄÏÇ¨Ìï≠ */}
          <Card>
            <CardContent>
              <Typography variant="h6" sx={{ mb: 2 }}>Í¥ÄÎ†® Í≥µÏßÄÏÇ¨Ìï≠</Typography>
              <List dense>
                                  <ListItem sx={{ px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 36 }}>
                      <Schedule sx={{ fontSize: 20, color: '#0066FF' }} />
                    </ListItemIcon>
                    <ListItemText
                      primary="Ï†ïÍ∏∞ Ï†êÍ≤Ä ÏïàÎÇ¥ (1Ïõî)"
                      secondary="2024-01-10"
                      primaryTypographyProps={{ fontSize: '14px' }}
                      secondaryTypographyProps={{ fontSize: '12px' }}
                    />
                  </ListItem>
                                  <ListItem sx={{ px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 36 }}>
                      <Schedule sx={{ fontSize: 20, color: '#0066FF' }} />
                    </ListItemIcon>
                    <ListItemText
                      primary="Î≥¥Ïïà Ï†ïÏ±Ö ÏóÖÎç∞Ïù¥Ìä∏"
                      secondary="2024-01-05"
                      primaryTypographyProps={{ fontSize: '14px' }}
                      secondaryTypographyProps={{ fontSize: '12px' }}
                    />
                  </ListItem>
                                  <ListItem sx={{ px: 0 }}>
                    <ListItemIcon sx={{ minWidth: 36 }}>
                      <Schedule sx={{ fontSize: 20, color: '#0066FF' }} />
                    </ListItemIcon>
                    <ListItemText
                      primary="Ïã†Í∑ú Í∏∞Îä• ÏïàÎÇ¥"
                      secondary="2023-12-28"
                      primaryTypographyProps={{ fontSize: '14px' }}
                      secondaryTypographyProps={{ fontSize: '12px' }}
                    />
                  </ListItem>
              </List>
            </CardContent>
          </Card>
        </Grid>
      </Grid>

      {/* ÏàòÏ†ï Îã§Ïù¥ÏñºÎ°úÍ∑∏ */}
      <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth="md" fullWidth>
        <DialogTitle>Í≥µÏßÄÏÇ¨Ìï≠ ÏàòÏ†ï</DialogTitle>
        <DialogContent>
          <Grid container spacing={2} sx={{ mt: 1 }}>
            <Grid item xs={12}>
              <TextField
                fullWidth
                label="Ï†úÎ™©"
                defaultValue={noticeDetail.title}
                sx={{ mb: 2 }}
              />
            </Grid>
            <Grid item xs={6}>
              <TextField
                fullWidth
                select
                label="Ïπ¥ÌÖåÍ≥†Î¶¨"
                defaultValue={noticeDetail.category}
                SelectProps={{ native: true }}
              >
                <option value="ÏãúÏä§ÌÖú">ÏãúÏä§ÌÖú</option>
                <option value="ÏÑúÎπÑÏä§">ÏÑúÎπÑÏä§</option>
                <option value="Ï†êÍ≤Ä">Ï†êÍ≤Ä</option>
                <option value="Í∏∞ÌÉÄ">Í∏∞ÌÉÄ</option>
              </TextField>
            </Grid>
            <Grid item xs={6}>
              <TextField
                fullWidth
                select
                label="Ï§ëÏöîÎèÑ"
                defaultValue={noticeDetail.importance}
                SelectProps={{ native: true }}
              >
                <option value="ÎÜíÏùå">ÎÜíÏùå</option>
                <option value="Î≥¥ÌÜµ">Î≥¥ÌÜµ</option>
                <option value="ÎÇÆÏùå">ÎÇÆÏùå</option>
              </TextField>
            </Grid>
            <Grid item xs={12}>
              <TextField
                fullWidth
                multiline
                rows={15}
                label="ÎÇ¥Ïö©"
                defaultValue={noticeDetail.content}
                sx={{
                  '& .MuiOutlinedInput-root': {
                    fontFamily: 'monospace',
                    fontSize: '14px'
                  }
                }}
              />
            </Grid>
          </Grid>
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setEditDialogOpen(false)}>Ï∑®ÏÜå</Button>
          <Button variant="text">Ï†ÄÏû•</Button>
        </DialogActions>
      </Dialog>
    </Box>
  )
}

export default NoticeDetailPage
